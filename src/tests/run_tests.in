#!/bin/bash

ARGS=$(getopt -o m:x:p:vlf:Ld: -- "$@");
eval set -- "$ARGS";

EXEC=cutes
EXEC_QML=./execute_qml
VERBOSE=false
USE_CUTES_PATH=
TAG="<T>"
CMAKE=cmake
WORK_PATH=`mktemp -d`
DEL_WORK_PATH=true
FILTER=
ONLY_LIST=false
SILENT_INSTALL=true

function trace {
    if $VERBOSE; then
        echo $TAG $@
    fi
}

function setup_local {
    echo "Setup local"
    pushd ../../ && \
        ${CMAKE} -DCUTES_VERSION=0.9.8.1 \
        -DCMAKE_INSTALL_PREFIX:PATH=/usr . && \
        (($SILENT_INSTALL && make install DESTDIR=${WORK_PATH} >/dev/null) || make install DESTDIR=${WORK_PATH}) && \
        popd

    export CUTES_LIBRARY_PATH=${WORK_PATH}/usr/share/cutes:${WORK_PATH}/usr/@DST_LIB@/qt5/cutes
    export EXEC=${WORK_PATH}/usr/bin/cutes
    export QML2_IMPORT_PATH=${WORK_PATH}/usr/@DST_LIB@/qt5/qml:${QML2_IMPORT_PATH}
    export LD_LIBRARY_PATH="${WORK_PATH}/usr/@DST_LIB@:$LD_LIBRARY_PATH"
}

IS_LOCAL=false

while true; do
    case "$1" in
        -f)
            FILTER=$2
            shift 2;
            ;;
        -x)
            EXEC=$2
            shift 2;
            ;;
        -m)
            CMAKE=$2
            shift 2;
            ;;
        -d)
            WORK_PATH=$2
            DEL_WORK_PATH=false
            shift 2;
            ;;
        -p)
            USE_CUTES_PATH=$2
            shift 2;
            ;;
        -v)
            echo "$TAG Verbose"
            VERBOSE=true
            SILENT_INSTALL=false
            shift 1;
            ;;
        -l)
            IS_LOCAL=true
            shift 1;
            ;;
        -L)
            ONLY_LIST=true
            shift 1;
            ;;
        --)
            shift;
            ;;
        *)
            break;
            ;;
    esac
done

EXEC=`which $EXEC`
export LD_LIBRARY_PATH="`dirname $EXEC`:$LD_LIBRARY_PATH"
if [ "x$USE_CUTES_PATH" != "x" ]; then
    export CUTES_LIBRARY_PATH=$USE_CUTES_PATH
    trace "Using CUTES_LIBRARY_PATH: $CUTES_LIBRARY_PATH"
fi

if $IS_LOCAL; then
    setup_local
fi

trace "Executable is $EXEC"
trace "LD_LIBRARY_PATH $LD_LIBRARY_PATH"
trace "QML2_IMPORT_PATH ${QML2_IMPORT_PATH}"

SUCCEEDED_COUNT=0
FAILED_COUNT=0
FAILED=""
SUCCEEDED=""

function check_res {
    if [ $# -ne 3 ]; then
        echo "$TAG Unexpected params: $@"
    fi
    cmd=$1
    expected=$2
    test=$3

    if $ONLY_LIST; then
        SUCCEEDED+=" $test"
        return 0
    fi

    if [ "x$FILTER" != "x" ]; then
        if [ $test != $FILTER ]; then
            return 0
        fi
    fi
    trace "Executing TEST $cmd"
    if $VERBOSE; then
        $cmd
        res=$?
    else
        `$cmd &>/dev/null`
        res=$?
    fi
    if [ $res -eq $expected ]; then
        ((SUCCEEDED_COUNT++))
    else
        echo "$TAG TEST IS FAILED: $test. Got $res instead of $expected"
        ((FAILED_COUNT++))
        FAILED+=" $test"
    fi
}

EXIT_FAILURE=1

# check exiting with error if non-existing files are supplied
cmd="cutes non_existing.qml"
check_res "$cmd" $EXIT_FAILURE "load-non-existing-qml"
cmd="cutes non_existing.js"
check_res "$cmd" $EXIT_FAILURE "load-non-existing-js"
cmd="cutes -cli non_existing.qml"
check_res "$cmd" $EXIT_FAILURE "load-non-existing-qml-cli-mode"

cmd="cutes empty.js"
check_res "$cmd" 0 "load-empty-js"

cmd="cutes bad.js"
check_res "$cmd" $EXIT_FAILURE "loading-bad-js"

cmd="cutes load_actor_bad.js bad.js"
check_res "$cmd" $EXIT_FAILURE "load-actor-bad"

cmd="cutes globals.js"
check_res "$cmd" 0 "js-globals"

cmd="cutes exit.js"
check_res "$cmd" 0 "js-exit"

cmd="cutes load_actor_globals.js"
check_res "$cmd" 0 "load-actor-globals"

cmd="cutes throws.js"
check_res "$cmd" $EXIT_FAILURE "js-throws"

cmd="cutes load_actor_bad.js throws.js"
check_res "$cmd" $EXIT_FAILURE "load-actor-throws"

cmd="cutes use-qtcore.js"
check_res "$cmd" 0 "require-qtcore"

cmd="cutes -cli simple_qml_adapter.qml"
check_res "$cmd" 0 "cutes-qml-use-cutes-adapter"

cmd="cutes -cli qml_adapter_use_cutes.qml"
check_res "$cmd" 0 "cutes-qml-use-adapter-cutes"

cmd="$EXEC_QML simple_qml_adapter.qml"
check_res "$cmd" 0 "qml-use-cutes-adapter"

cmd="$EXEC_QML qml_adapter_use_cutes.qml"
check_res "$cmd" 0 "qml-use-adapter-cutes"

cmd="$EXEC_QML basic_actor.qml"
check_res "$cmd" 0 "qml-use-actor"

cmd="$EXEC_QML actor_extend.qml"
check_res "$cmd" 0 "qml-actor-extend-qml-extend"

cmd="$EXEC_QML test_bridge.qml"
check_res "$cmd" 0 "qml-test-actor-bridge"

if $DEL_WORK_PATH; then
    rm -rf $WORK_PATH
fi

if $ONLY_LIST; then
    echo "Available: $SUCCEEDED"
else
    echo "$TAG RESULTS: (OK $SUCCEEDED_COUNT) (FAILED $FAILED_COUNT)"
    if [ $FAILED_COUNT -ne 0 ]; then
        echo "$TAG FAILED: ($FAILED)"
    fi
fi
exit $FAILED_COUNT


#+TITLE:cutes
#+MAN_CLASS_OPTIONS: :section-id 1 :company "Jolla Ltd." :date "Feb 11, 2013"
* NAME

  cutes allows to run JavaScript and QML files with QtScript support

* SYNOPSIS

  *cutes* [-h] /script_file/ [script arguments]

* DESCRIPTION

QtScript is the Qt library JavaScript engine. cutes command
provides the way to run JavaScript files as shell scripts or to load QML
UI with QtScript support.

* COMMAND LINE OPTIONS

  - *-h* :: show usage
  - *script_file* :: name of the javascript or qml file to be executed,
                     files with .qml extension will be considered as 
                     QML UI files, other - as JS files
  - *[script arguments]* :: arguments to be passed to javascript in
       the *qtscript.args* variable

* ENVIRONMENT

  - *QTSCRIPT\_LIBRARY\_PATH* :: contains colon-separated list of
       paths to directories containing QtScript extensions and
       JavaScript modules, available for importing. Because this paths
       are just library paths, extensions themselves (shared objects)
       should reside in subdirectories ./script/. JavaScript modules
       should reside in ./. By default qtscript is trying to add
       /usr/lib{,32,64}/qt4/plugins directories.

* JAVASCRIPT CONTEXT

  qtscript provides several objects/functions, available in executed
  scripts.

- *qtscript.system.os* :: OS "name": can be any of ["linux", "macos",
     "win32", "unknown"]
- *qtscript.system.env* :: environment variables
- *qtscript.system.path* :: Application library paths
- *qtscript.include* :: function to execute javascript file by file
     name. File name can be absolute or relative to the directory
     where running script resides or to any directory in the library
     path. Result of execution is returned
- *qtscript.extend* :: instructs engine to import QtScript extension
- *qtscript.script.args* :: list of command line arguments
- *qtscript.script.filename* :: currently executed script file name
     (e.g. in *qtscript.include* it will be included script path name)
- *qtscript.script.cwd* :: current working directory or directory
     where currently executed/evaluated script is located
- *module* :: current file module object, resembling e.g. node.js
              module object
- *require* :: synonym for qtscript.include, compatible with other
               module systems, returns symbols exported by module
- *exports* :: object to be used to hold exported symbols, it is just
               reference to the current module.exports. QtScript
               engine resolves it only in file scope but does not do
               it inside internal scopes (functions etc.)

* AUTHOR
  Denis Zalevskiy <denis.zalevskiy@jollamobile.com>

* LICENSING
  cutes is distributed under terms and conditions of the LGPLv2
  license.
